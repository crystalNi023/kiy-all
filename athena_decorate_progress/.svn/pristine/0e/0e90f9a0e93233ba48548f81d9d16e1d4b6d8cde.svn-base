<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dec.pro.mapper.project.ProjectMapper">
	<insert id="add" parameterType="com.dec.pro.entity.project.Project">
		INSERT INTO project
		<set>
			<if test="id != null">
				`id`=#{id},
			</if>
			<if test="comId != null">
				`com_id`=#{comId},
			</if>
			<if test="cusId != null">
				`cus_id`=#{cusId},
			</if>
			<if test="type != null">
				`type`=#{type},
			</if>
			<if test="planStartTime != null">
				`plan_start_time`=#{planStartTime},
			</if>
			<if test="planEndTime != null">
				`plan_end_time`=#{planEndTime},
			</if>
			<if test="remark != null">
				`remark`=#{remark},
			</if>
			<if test="created != null">
				`created`=#{created},
			</if>
			<if test="updated != null">
				`updated`=#{updated},
			</if>
		</set>
	</insert>
	<select id="getOne"  resultType="com.dec.pro.entity.project.Project">
		SELECT  
			`id`        as 'id' ,
			`com_id`  	  as 'comId' ,
			`cus_id`  	  as 'cusId' ,
			`type`  	  as 'type' ,
			`plan_start_time`  	  as 'planStartTime' ,
			`plan_end_time`    as 'planEndTime' ,
			`remark`    as 'remark' ,
			`created`   as 'created' ,
			`updated`   as 'updated' 
		FROM project
		WHERE `id`=#{id}
	</select>
	<!-- <select id="getList" parameterType="java.util.Map" resultType="com.dec.pro.entity.project.Project">
		SELECT  
				P.`id`        as 'id' ,
				P.`cus_id`  	  as 'cusId' ,
				P.`type`  	  as 'type' ,
				P.`plan_start_time`  	  as 'planStartTime' ,
				P.`plan_end_time`    as 'planEndTime' ,
				C.`name`		as  'customerName',
	            C.`address`		as  'address'
			FROM project P 
	        LEFT JOIN customer C ON C.`id`=P.`cus_id`
		<include refid="searchCondition"></include>
	LIMIT #{startRow},#{pageSize}
	</select> -->
		<select id="getTimeAssessProcessByProId" resultType="com.dec.pro.entity.project.Project">
		SELECT SUM(PDU.time_assess) as `timeAssess`,ROUND(AVG(PDU.process)) AS 'process' 
			FROM customer CU LEFT JOIN project PU ON CU.id=PU.cus_id 
	            JOIN `procedure` PDU ON PDU.pro_id=PU.id  where PU.id=#{proId}
	</select>
 	<select id="getList" parameterType="java.util.Map" resultType="com.dec.pro.entity.project.Project">
	SELECT  
				P.`id`        as 'id' ,
				P.`com_id`  	  as 'comId' ,
				P.`cus_id`  	  as 'cusId' ,
				P.`type`  	  as 'type' ,
				P.`plan_start_time`  	  as 'planStartTime' ,
				P.`plan_end_time`    as 'planEndTime' ,
				P.`project_status`    as 'projectStatus' ,
				C.`name`		as  'customerName',
				C.`phone`		as  'customerPhone',
	            C.`address`		as  'address',
	          	ROUND(AVG(PD.`process`)) AS 'process',
				  (select SUM(`procedure`.time_assess) FROM `procedure` WHERE `procedure`.pro_id=P.id) AS 'timeAssess',
	              MAX(CASE WHEN DT.`module`=1 THEN DT.`name` END)  AS  'decorationDepartment',
				  MAX(CASE WHEN DT.`module`=1 THEN DT.`phone` END)  AS  'decorationDepartmentPhone',
	              MAX(CASE WHEN DT.`module`=2 THEN DT.`name` END)  AS  'design',
				  MAX(CASE WHEN DT.`module`=2 THEN DT.`phone` END)  AS  'designPhone',
				  MAX(CASE WHEN DT.`module`=3 THEN DT.`name` END)  AS  'decoration',
				  MAX(CASE WHEN DT.`module`=3 THEN DT.`phone` END)  AS  'decorationPhone',
				  MAX(CASE WHEN DT.`module`=4 THEN DT.`name` END)  AS  'spot',
				  MAX(CASE WHEN DT.`module`=4 THEN DT.`phone` END)  AS  'spotPhone',
				  MAX(CASE WHEN DT.`module`=5 THEN DT.`name` END)  AS  'constructor',
				  MAX(CASE WHEN DT.`module`=5 THEN DT.`phone` END)  AS  'constructorPhone'
			FROM project P 
	        LEFT JOIN customer C ON C.`id`=P.`cus_id`
	        LEFT JOIN project_tecoration PT ON PT.`pro_id`=P.`id`
	        LEFT JOIN decoration_team DT ON DT.`id` = PT.`tec_id`
	        LEFT JOIN `procedure` PD ON PD.`pro_id`=P.`id`
		<include refid="searchCondition"></include>
		 GROUP BY P.`id`
		 ORDER BY P.`created` DESC
		 LIMIT #{startRow},#{pageSize}
	</select>
 	<select id="getListByUserId" parameterType="java.util.Map" resultType="com.dec.pro.entity.project.Project">
	SELECT  
				P.`id`        as 'id' ,
				P.`com_id`  	  as 'comId' ,
				P.`cus_id`  	  as 'cusId' ,
				P.`type`  	  as 'type' ,
				P.`plan_start_time`  	  as 'planStartTime' ,
				P.`plan_end_time`    as 'planEndTime' ,
				P.`project_status`    as 'projectStatus' ,
				C.`name`		as  'customerName',
				C.`phone`		as  'customerPhone',
	            C.`address`		as  'address',
	          	ROUND(AVG(PD.`process`)) AS 'process',
				  (select SUM(`procedure`.time_assess) FROM `procedure` WHERE `procedure`.pro_id=P.id) AS 'timeAssess',
	             <!--  MAX(CASE WHEN DT.`module`=1 THEN DT.`id` END)  AS  'decorationDepartmentId',
	              MAX(CASE WHEN DT.`module`=1 THEN DT.`name` END)  AS  'decorationDepartment',
				  MAX(CASE WHEN DT.`module`=1 THEN DT.`phone` END)  AS  'decorationDepartmentPhone', -->
	      		  MAX(CASE WHEN DT.`module`=2 THEN DT.`id` END)  AS  'designId',
	      		  MAX(CASE WHEN DT.`module`=2 THEN DT.`name` END)  AS  'design',
				  MAX(CASE WHEN DT.`module`=2 THEN DT.`phone` END)  AS  'designPhone',
				  MAX(CASE WHEN DT.`module`=3 THEN DT.`id` END)  AS  'decorationId',
				  MAX(CASE WHEN DT.`module`=3 THEN DT.`name` END)  AS  'decoration',
				  MAX(CASE WHEN DT.`module`=3 THEN DT.`phone` END)  AS  'decorationPhone',
				  MAX(CASE WHEN DT.`module`=4 THEN DT.`name` END)  AS  'spot',
				  MAX(CASE WHEN DT.`module`=4 THEN DT.`phone` END)  AS  'spotPhone',
				  MAX(CASE WHEN DT.`module`=5 THEN DT.`id` END)  AS  'constructorId',
				  MAX(CASE WHEN DT.`module`=5 THEN DT.`name` END)  AS  'constructor',
				  MAX(CASE WHEN DT.`module`=5 THEN DT.`phone` END)  AS  'constructorPhone'
			FROM project P 
	        LEFT JOIN customer C ON C.`id`=P.`cus_id`
	        LEFT JOIN project_tecoration PT ON PT.`pro_id`=P.`id`
	        LEFT JOIN decoration_team DT ON DT.`id` = PT.`tec_id`
	        LEFT JOIN `procedure` PD ON PD.`pro_id`=P.`id`
		<include refid="searchConditionByUserId"></include>
		 GROUP BY P.`id`
         HAVING decorationId in (SELECT id from decoration_team where user_id=#{userId}) or
         constructorId in (SELECT id from decoration_team where user_id='cfd562324a2545ca9788f82663e51122')
		 ORDER BY P.`created` DESC
		 LIMIT #{startRow},#{pageSize}
	</select>
 	<select id="getCount" parameterType="java.util.Map" resultType="int">
		 SELECT COUNT(*) FROM (SELECT COUNT(*) FROM project P 
	 	 LEFT JOIN customer C ON C.`id`=P.`cus_id`
	     LEFT JOIN project_tecoration PT ON PT.`pro_id`=P.`id`
	     LEFT JOIN decoration_team DT ON DT.`id` = PT.`tec_id` 
		<include refid="searchCondition"></include>
		 GROUP BY P.`id`) t
	</select>
 	<select id="getCountByUserId" parameterType="java.util.Map" resultType="int">
		 SELECT COUNT(*) FROM 
		 	(SELECT COUNT(*),  
		 	MAX(CASE WHEN DT.`module`=3 THEN DT.`id` END)  AS  'decorationId' 
		 	FROM project P 
	 	 LEFT JOIN customer C ON C.`id`=P.`cus_id`
	     LEFT JOIN project_tecoration PT ON PT.`pro_id`=P.`id`
	     LEFT JOIN decoration_team DT ON DT.`id` = PT.`tec_id` 
		<include refid="searchConditionByUserId"></include>
		 GROUP BY P.`id` 
		 HAVING decorationId in (SELECT id from decoration_team where user_id=#{userId})
		 ) t
	</select>
	<sql id="searchCondition">
		<where>
				P.`com_id` = #{comId} AND project_status='2'
			<if test="customerName != null">
				AND C.`name` LIKE '%${customerName}%'
			</if>
 			 <if test="decoration != null">
				AND DT.`name` LIKE '%${decoration}%'
			</if>
			<if test="address != null ">
				AND C.`address` LIKE '%${address}%'
			</if>
		</where>
	</sql>
	<sql id="searchConditionByUserId">
		<where><!--  
				DT.`user_id` = #{userId} AND就是因为输错了一个符号
				--> 
				P.`com_id` = #{comId} AND project_status='2'
			<if test="customerName != null">
				AND C.`name` LIKE '%${customerName}%'
			</if>
 			 <if test="decoration != null">
				AND DT.`name` LIKE '%${decoration}%'
			</if>
			<if test="address != null ">
				AND C.`address` LIKE '%${address}%'
			</if>
		</where>
	</sql>
	<!-- 调用需要日志记录 -->
	<delete id="delete">
		DELETE FROM project WHERE `id`=#{id}
	</delete>
	<update id="update" parameterType="com.dec.pro.entity.project.Project">
		UPDATE project 
		<set>
			<if test="comId != null">
				`com_id`=#{comId},
			</if>
			<if test="cusId != null">
				`cus_id`=#{cusId},
			</if>
			<if test="type != null">
				`type`=#{type},
			</if>
			<if test="planStartTime != null">
				`plan_start_time`=#{planStartTime},
			</if>
			<if test="planEndTime != null">
				`plan_end_time`=#{planEndTime},
			</if>
			<if test="projectStatus != null">
				`project_status`=#{projectStatus},
			</if>
		</set>
		WHERE id=#{id}
	</update>
		<select id="getProjectListByCusId"  resultType="com.dec.pro.entity.project.Project">
		SELECT  
			    `id`        as 'id' ,
			    `com_id`  	  as 'comId' ,
			    `cus_id`  	  as 'cusId' ,
				`type`  	  as 'type' ,
				`plan_start_time`  	  as 'planStartTime' ,
				`project_status`      as 'projectStatus',
				`plan_end_time`    as 'planEndTime' 
		FROM project
		WHERE `cus_id`=#{cusId}
	</select>
	<insert id="addProjectTecoration" parameterType="string">
		INSERT INTO project_tecoration
		<set>
			<if test="proId != null">
				`pro_id`=#{proId},
			</if>
			<if test="tecId != null">
				`tec_id`=#{tecId},
			</if>
		</set>
	</insert>
	<select id="getPushByProId" resultType="com.dec.pro.entity.push.Push">
		SELECT 
			PS.id        as 'id' ,
			PS.user_id   as 'userId' ,
			PS.device_tokens  as 'deviceTokens' ,
			PS.device_type  as 'deviceType' ,
			PS.remark    as 'remark' ,
			PS.created   as 'created' ,
			PS.updated   as 'updated' 
		FROM  push PS 
		JOIN customer C ON PS.`user_id`=C.`user_id`
		JOIN project P ON C.`id`=P.`cus_id`  
		where P.id=#{proId}
	</select>
	<select id="getListForCamera" parameterType="java.util.Map" resultType="com.dec.pro.entity.project.Project">
		SELECT 
		P.`created`          AS 'created',
		P.`id`               AS 'id',
		P.`project_status`   AS 'projectStatus',
		C.`address`			 AS 'address',
		C.`name`			 AS 'customerName',
	<!-- 	ANY_VALUE(DT.`name`)			 AS 'decoration', -->
		DT.`name`			 AS 'decoration',
		(SELECT COUNT(*) FROM device_allocation DA WHERE DA.`com_id`=P.`com_id` AND DA.`pro_id`=P.`id`) AS 'cameraCount'
		FROM project P
		JOIN customer C ON P.`cus_id`=C.`id`
		JOIN project_tecoration PT ON P.`id`=PT.`pro_id`
		JOIN decoration_team DT ON PT.`tec_id`=DT.`id` AND DT.`module`=3
		<include refid="searchConditionForCamera"></include>
		GROUP BY P.`id`
		ORDER BY P.`created` DESC
		LIMIT #{startRow},#{pageSize}
	</select>
	<select id="getCountForCamera" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM (SELECT COUNT(*) FROM project P
		JOIN customer C ON P.`cus_id`=C.`id`
		JOIN project_tecoration PT ON P.`id`=PT.`pro_id`
		JOIN decoration_team DT ON PT.`tec_id`=DT.`id` AND DT.`module`=3
		<include refid="searchConditionForCamera"></include>
		GROUP BY P.`id`) T
	</select>
	<sql id="searchConditionForCamera">
		<where>
			P.`com_id`=#{comId}
			<if test="userId != null">
			AND	DT.`user_id`=#{userId}
			</if>
			<if test="decoration != null">
			AND	DT.`name` LIKE '%${decoration}%'
			</if>
		</where>
	</sql>
</mapper>