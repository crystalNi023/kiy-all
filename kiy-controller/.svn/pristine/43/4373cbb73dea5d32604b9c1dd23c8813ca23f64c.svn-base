package com.kiy.controller;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Dialog;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;

import com.kiy.client.CtrClient;
import com.kiy.common.Sence;
import com.kiy.common.Servo;
import com.kiy.common.Task;
import com.kiy.common.Unit;
import com.kiy.protocol.Messages.DeleteSence;
import com.kiy.protocol.Messages.Message;
import com.kiy.protocol.Messages.Message.ActionCase;
import com.kiy.resources.Lang;
import com.kiy.resources.Resource;

/**
 * 
 * @author HLX
 *
 */
public class FSenceRecord extends Dialog implements FormMessage {

	private Shell shell;
	private Table tableSence;

	private CtrClient client;
	
	private Menu menu;
	
	private Servo servo;
	private Sence sence;
	private List<Sence> listSence;

	public FSenceRecord(Shell parent) {
		super(parent, 0);
		listSence = new ArrayList<>();
	}

	public void open(Servo s) {
		servo = s;
		createContents();
		F.center(getParent(), shell);
		shell.open();
		shell.layout();
		Display display = getParent().getDisplay();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	private void createContents() {
		shell = new Shell(getParent(), SWT.BORDER | SWT.CLOSE | SWT.MIN | SWT.MAX | SWT.RESIZE);
		shell.setSize(900, 500);
		shell.setText(Lang.getString("FSenceRecord.ShellName.text")+servo.toString());
		shell.setImage(Resource.getImage(FMain.class, "/com/kiy/resources/controller.png"));
		client = servo.getClient();

		FillLayout fillLayout = new FillLayout();
		fillLayout.marginHeight = 10;
		fillLayout.marginWidth = 10;
		fillLayout.spacing = 10;
		shell.setLayout(fillLayout);

		tableSence = new Table(shell, SWT.BORDER | SWT.FULL_SELECTION);
		tableSence.setHeaderVisible(true);
		tableSence.setLinesVisible(true);
		{
			TableColumn tblTaskrNameColumn = new TableColumn(tableSence, SWT.NONE);
			tblTaskrNameColumn.setText(Lang.getString("FSenceRecord.tblPlanName.text"));
			tblTaskrNameColumn.setWidth(120);

			tblTaskrNameColumn = new TableColumn(tableSence, SWT.LEFT);
			tblTaskrNameColumn.setText(Lang.getString("FUserAndRole.tblUserStatusColumn.text"));
			tblTaskrNameColumn.setWidth(100);

			tblTaskrNameColumn = new TableColumn(tableSence, SWT.NONE);
			tblTaskrNameColumn.setText(Lang.getString("FSenceRecord.tblSwitchStatus.text"));
			tblTaskrNameColumn.setWidth(160);
		}
		// 顶部菜单
		menu = new Menu(shell, SWT.BAR);
		shell.setMenuBar(menu);

		MenuItem createItem = new MenuItem(menu, SWT.CASCADE);
		createItem.setText(Lang.getString("FUserAndRole.createItem.text"));

		// 编辑
		MenuItem editItem = new MenuItem(menu, SWT.CASCADE);
		editItem.setText(Lang.getString("FSenceRecord.MenuEdit.text"));
		editItem.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent arg0) {
				// 编辑任务
				editSence();
			}
		});
		editItem.setData(new ActionCase[] { ActionCase.UPDATE_SENCE });
		
		// 删除
		MenuItem deleteItem = new MenuItem(menu, SWT.CASCADE);
		deleteItem.setText(Lang.getString("FSence.delete"));
		deleteItem.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent arg0) {
				// 删除任务
				deleteSence();
			}
		});
		
		// 初始化表格
		taskSelect();
		
		//右键菜单
		mouseRightClick();
	}

	// 查询任务排序
	private void taskSelect() {
		listSence.clear();
		for (TableItem tableItem : tableSence.getItems()) {
			tableItem.dispose();
		}
		defaultSortUser();

	}

	// 排序器
	private void defaultSortUser() {
		Collections.sort(listSence, new Comparator<Sence>() {
			public int compare(Sence a, Sence b) {
				return Long.compare(a.getCreated().getTime(), b.getCreated().getTime());
			}
		});
	}

	/**
	 * 鼠标右击打开计划编辑菜单
	 */
	private void mouseRightClick() {
		Menu taskMenu = new Menu(shell, SWT.POP_UP);
		MenuItem createTask = new MenuItem(taskMenu, SWT.PUSH);
		MenuItem editItem = new MenuItem(taskMenu, SWT.PUSH);
		MenuItem deleteItem = new MenuItem(taskMenu, SWT.PUSH);
		MenuItem enableItem = new MenuItem(taskMenu,SWT.PUSH);

		createTask.setText("增加");
		editItem.setText("删除");
		deleteItem.setText("修改");
		enableItem.setText("查看");
		
		tableSence.setMenu(taskMenu);

	}
	
	public Shell getShell() {
		return shell;
	}

	// 编辑任务
		private void editSence() {
			TableItem[] item = tableSence.getSelection();
			int selectionIndex = tableSence.getSelectionIndex();
			if (selectionIndex == -1) {
				F.mbInformation(shell, Lang.getString("FSenceRecord.edit"), Lang.getString("FSenceRecord.edit.tip"));
				return;
			}
			Object data = item[0].getData();
			if (data instanceof Sence) {
				sence = (Sence) data;
//				AUpdateTask a = new AUpdateTask(this, servo, sence);
//				a.sendMessage();
			}
		}
		
		//删除
		private void deleteSence(){
			
		}

	
	@Override
	public void received(Servo s, Message m, HashMap<Message, Unit> units) {

	}

	@Override
	public void close() {
		// 无处理
	}
}